Para enumerar las veces que los philos comen en una ejecución:

1. Crear archivo "output.txt" con el resultado.
2. usar el siguiente codigo:

    grep "is eating" output.txt | cut -d' ' -f2 | sort | uniq -c


Para comprobar los data races:

En mi caso usaremos la herramienta de Valgrind llamada Helgrind, que sirve para comprobar los data races en programas multihilos. El uso de Helgrind, hace que el acceso a la memoria de llos hilos se sobrecargue por lo que retrasa los usleep de los hilos, pudiendo parecer que hayan errores, sin embargo, si lanza el mensaje de que hay 0 error of 0 context, significa que no hay data races, asi que se debe probar el resultado en escenario real sin usar Helgrind.

Un ejemplo de uso de Helgrind:

valgrind --tool=helgrind ./philo 5 1000 200 200

Banderas a usar para poder tener la herramienta en uso: 

-Wall -Werror -Wextra -pthread -g -O0

2. Usar las banderas -O3 -pthread. A continuación explico porque:

-O3: Se usa para optimizar el proyecto y conseguir que el rendimiento
sea lo más alto posible. Es ideal para proyectos que se ejecutan repetidamente
como pueden ser los hilos.

-pthread: Se usa para habilitar la biblioteca POSIX threads en compiladores
como son gcc o clang, de esta manera en nuestro proyecto con hilos se asegura
de que el compilador y el enlazador trabajen correctamente para manejar los hilos.
